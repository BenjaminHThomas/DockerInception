services:
  nginx:
    networks:
      - inception
    build:
      context: requirements/nginx
      dockerfile: "Dockerfile"
    image: nginx
    pull_policy: never
    container_name: nginx
    ports:
      - "443:443"
    volumes:
      - web:/var/www/html
    depends_on:
      wordpress:
        condition: service_started
    restart: always
  
  wordpress:
    networks:
      - inception
    build: 
      context: requirements/wordpress
      dockerfile: "Dockerfile"
    image: wordpress
    container_name: wordpress
    pull_policy: never
    depends_on:
      mariadb:
        condition: service_healthy
      redis: 
        condition: service_healthy
    volumes:
      - web:/var/www/html
    environment:
      WORDPRESS_DB_HOST: mariadb
      WORDPRESS_SITE_URL: ${WORDPRESS_SITE_URL}

      WORDPRESS_SITE_TITLE: ${WORDPRESS_SITE_TITLE}
      WORDPRESS_ADM_USER: ${WORDPRESS_ADM_USER}
      WORDPRESS_ADM_PASS: ${WORDPRESS_ADM_PASS}
      WORDPRESS_ADMIN_EMAIL: ${WORDPRESS_ADMIN_EMAIL}

      WORDPRESS_USERNAME: ${WORDPRESS_USERNAME}
      WORDPRESS_PASS: ${WORDPRESS_PASS}
      WORDPRESS_EMAIL: ${WORDPRESS_EMAIL}

      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASS}
      MYSQL_DATABASE: ${MYSQL_DB}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASS}

      WP_REDIS_HOST: redis
      WP_REDIS_PORT: 6379
    restart: always

  mariadb:
    networks:
      - inception
    volumes:
      - db:/var/lib/mysql
    build: 
      context: requirements/mariadb
      dockerfile: "Dockerfile"
    image: mariadb
    pull_policy: never
    container_name: mariadb
    environment:
      MYSQL_DATABASE: ${MYSQL_DB}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASS}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASS}
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${MYSQL_ROOT_PASS}"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: always
  
  redis:
    networks:
      - inception
    build: 
      context: requirements/bonus/redis
      dockerfile: "Dockerfile"
    image: redis
    pull_policy: never
    container_name: redis
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: always
  
  ftp:
    networks:
      - inception
    build:
      context: requirements/bonus/ftp
      dockerfile: "Dockerfile"
    environment:
      FTP_USER: ${FTP_USER}
      FTP_PASS: ${FTP_PASS}
    image: ftp
    pull_policy: never
    container_name: ftp
    volumes:
      - web:/web_data
    ports:
      - "20:20"
      - "21:21"
      - "30000-30100:30000-30100"
    restart: always

volumes:
  web:
    driver: local
    driver_opts:
      type: none
      device: ${HOME}/data/web
      o: bind
  db:
    driver: local
    driver_opts:
      type: none
      device: ${HOME}/data/db
      o: bind

networks:
  inception:
    driver: bridge